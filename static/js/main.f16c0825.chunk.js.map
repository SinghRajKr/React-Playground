{"version":3,"sources":["ListContacts.js","landingpage.js","footer.js","App.js","serviceWorker.js","index.js","images/pentester.jpg","images/node.jpg","images/push.jpg","images/zinc.jpg"],"names":["ListContacts","props","react_default","a","createElement","className","contacts","map","contact","key","id","style","backgroundImage","concat","avatarURL","name","handle","onClick","onDeleteContact","LandingPage","state","open","raj","node","push","zinc","removeContact","_this","setState","currentstate","filter","cont","handleDrawerOpen","handleDrawerClose","_this$props","this","classes","theme","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","fontWeight","fontSize","paddingRight","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","text","index","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","content","contentShift","paragraph","src_ListContacts","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","backgroundColor","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","Footer","App","landingpage","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f16c0825.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst ListContacts = (props) => (\r\n    <ol className=\"contact-list\" >\r\n        {\r\n            props.contacts.map((contact) => (\r\n                <li key={contact.id} className='contact-list-item'>\r\n                    <div className='contact-avatar' style={{ backgroundImage: `url(${contact.avatarURL})` }}>\r\n                    </div>\r\n                    <div className='contact-details'>\r\n                        <p>{contact.name}</p>\r\n                        <p>{contact.handle}</p>\r\n                    </div>\r\n                    <button \r\n                    className='contact-remove'\r\n                    onClick = {() => props.onDeleteContact(contact)}\r\n                    >Remove</button>\r\n                </li>\r\n            ))\r\n        }\r\n    </ol>\r\n)\r\n\r\nexport default ListContacts;","import React from 'react';\r\nimport ListContacts from './ListContacts';\r\nimport raj from './images/pentester.jpg'\r\nimport node from './images/node.jpg'\r\nimport push from './images/push.jpg'\r\nimport zinc from './images/zinc.jpg'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 20,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: '#a341f4',\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n});\r\n\r\nclass LandingPage extends React.Component {\r\n    state = {\r\n        open: false,\r\n        contacts: [\r\n            {\r\n                id: 'raju-singh',\r\n                name: 'Raj Kumar',\r\n                handle: '@pentester',\r\n                avatarURL: raj\r\n            },\r\n            {\r\n                id: 'yashwanth-reddy-yenugu',\r\n                name: 'Yashwanth Reddy',\r\n                handle: '@yash',\r\n                avatarURL: node\r\n            },\r\n            {\r\n                id: 'pushpak-singirikonda-495a48114',\r\n                name: 'Pushpak Singirikonda',\r\n                handle: '@push',\r\n                avatarURL: push\r\n            },\r\n            {\r\n                id: 'saiteja-aakula-065111107',\r\n                name: 'Saiteja Aakula',\r\n                handle: '@zinc',\r\n                avatarURL: zinc\r\n            },\r\n        ]\r\n    }\r\n\r\n    removeContact = (contact) => {\r\n        this.setState((currentstate) => ({\r\n            contacts: currentstate.contacts.filter((cont) => {\r\n                return cont.id !== contact.id\r\n            })\r\n        }))\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n        const { open } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classNames(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar disableGutters={!open}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            className={classNames(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                            React App\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <h3 style={{ color: 'white', fontWeight: 200, fontSize: 20, paddingRight:15 }}>React App</h3>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        {['JavaScript', 'NodeJs', 'ReactJs', 'Angular'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['ES6', 'SQL', 'Network Security'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n                <main\r\n                    className={classNames(classes.content, {\r\n                        [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader} />\r\n                    <Typography paragraph>\r\n                        <ListContacts\r\n                            contacts={this.state.contacts}\r\n                            onDeleteContact={this.removeContact}\r\n                        />\r\n                    </Typography>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLandingPage.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(LandingPage);","import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">   \r\n                        Footer works!\r\n                        Diego, CA 92101 1023 Springdale Rd Suite 10E Austin, TX 7872              \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport LandingPage from './landingpage';\nimport Footer from './footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <LandingPage />\n       <Footer />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pentester.0f109604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/node.7e58ca87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/push.1d04343a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zinc.4b1999a6.jpg\";"],"sourceRoot":""}